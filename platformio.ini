; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:genericSTM32F411CE]
platform = ststm32
board = genericSTM32F411CE
framework = arduino

[env:blackpill_f411ce]
platform = ststm32
board = blackpill_f411ce
framework = arduino
upload_protocol = dfu
monitor_speed = 115200
build_flags = 
    -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC 


; ======================== scanner ======================== ;
[env:scanner]
extends = env:genericSTM32F411CE

build_src_filter = +<../test/scanner.cpp>

; ======================== bme280 ======================== ;
[env:bme280]
extends = env:genericSTM32F411CE

build_src_filter = +<./bme280.cpp>
lib_deps =
	adafruit/Adafruit BME280 Library

; ======================== GNSS ======================== ;
[env:GNSS]
extends = env:genericSTM32F411CE

build_src_filter = +<./GNSS.cpp>
lib_deps =
	mikalhart/TinyGPSPlus

; ======================== IMU ======================== ;
[env:IMU]
extends = env:genericSTM32F411CE

build_src_filter = +<./IMU.cpp>
lib_deps =
	adafruit/Adafruit LIS331

; ======================== Sd card ======================== ;
[env:Sd_card]
extends = env:genericSTM32F411CE

build_src_filter = +<./Sd_card.cpp>
lib_deps =
	greiman/SdFat

; ======================== Lora ======================== ;
; ========= Receive =======;
[env:LoRa_Receive]
extends = env:blackpill_f411ce

build_src_filter = +<./LoRa_Receive.cpp>
lib_deps = 
	jgromes/RadioLib

; ========= Transmit =======;
[env:LoRa_Transmit]
extends = env:genericSTM32F411CE

build_src_filter = +<./LoRa_Transmit.cpp>
lib_deps = 
	jgromes/RadioLib

; ========================= KalmanFilter =========================;
[env:KalmanFilter]
extends = env:genericSTM32F411CE

build_src_filter = +<./KalmanFilter.cpp>
lib_deps =
	vtneil/vt-linalg

; ========================= FreeRTOS =========================;
[env:FreeRTOS]
extends = env:genericSTM32F411CE

build_src_filter = +<./FreeRTOS.cpp>
lib_deps =
	stm32duino/STM32duino FreeRTOS
    

; ========================= RTC =========================;
[env:RTC]
extends = env:genericSTM32F411CE

build_src_filter = +<./RTC.cpp>
lib_deps =
	stm32duino/STM32duino RTC
	
; ========================= LowPower =========================;
[env:LowPower]
extends = env:genericSTM32F411CE

build_src_filter = +<./LowPower.cpp>
lib_deps =
	stm32duino/STM32duino RTC
	stm32duino/STM32duino Low Power

; ========================= ORBIT =========================
[env:ORBIT]
extends = env:genericSTM32F411CE

build_src_filter = +<./ORBIT.cpp>

